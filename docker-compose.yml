version: "3"

services:
  database:
    tty: true
    build:
      context: ./database
      dockerfile: Dockerfile
    ports:
      - 2000:5432
    env_file:
      - ./database/.env
    networks:
      - network

  redis:
    tty: true
    build:
      context: ./redis
      dockerfile: Dockerfile
      
    # Redis port should only be exposed in development environment
    ports:
      - 6000:6379
    env_file:
      - ./redis/.env
    networks:
      - network
      
  backend:
    tty: true
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 4000:80
    depends_on:
      - jaeger
      - redis
      - database
    env_file:
      - ./backend/production.env
    networks:
      - network
  
  frontend:
    tty: true
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    env_file:
      - ./frontend/production.env
    networks:
      - network
  
  grafana:
    image: grafana/grafana:main
    ports:
      - 8080:3000
    restart: unless-stopped
    user: "1000"
    volumes:
      - ./grafana:/var/lib/grafana
    networks:
      - network

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "5775:5775/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    networks:
      - network
  
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus-volume:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - network
  
volumes:
  grafana-volume:
  prometheus-volume:

networks:
  network:
